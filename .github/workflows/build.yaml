name: Build and test
on:
  pull_request:
  workflow_dispatch:
permissions:
  contents: read
jobs:
  thumbor-with-nginx-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: get thumbor version
        id: thumbor
        run: |
          echo "VERSION=$(cat thumbor/requirements.txt| grep thumbor== | cut -d= -f 3)" >> $GITHUB_OUTPUT
      - name: build thumbor image
        ## TODO set platform to linux/amd64,linux/arm64 once supported
        run: |
          docker buildx build --load --platform "linux/amd64" \
          -f thumbor/Dockerfile \
          --tag minimalcompact/thumbor:${{ steps.thumbor.outputs.VERSION }} \
          --tag minimalcompact/thumbor:latest \
          thumbor/
      - name: build nginx-proxy-cache image
        ## TODO set platform to linux/amd64,linux/arm64 once supported
        run: |
          docker buildx build --load --platform=linux/amd64 --pull -f nginx-proxy-cache/Dockerfile \
          --tag minimalcompact/thumbor-nginx-proxy-cache:${{ steps.thumbor.outputs.VERSION }} \
          --tag minimalcompact/thumbor-nginx-proxy-cache:latest \
          nginx-proxy-cache/
      - name: install bats
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          sudo ./install.sh /usr/local
      - name: run bats tests
        run: |
          for filename in tests/*.bats; do sudo bats --tap "$filename" || exit 1; done
  thumbor_simd:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        simd_level: ["sse4", "avx2"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: get thumbor version
        id: thumbor
        run: |
          echo "VERSION=$(cat thumbor/requirements.txt| grep thumbor== | cut -d= -f 3)" >> $GITHUB_OUTPUT
      - name: build image
        ## TODO set platform to linux/amd64,linux/arm64 once supported
        run: |
          docker buildx build --platform "linux/amd64" --build-arg SIMD_LEVEL=${{ matrix.simd_level }}  \
          -f thumbor/Dockerfile \
          --tag minimalcompact/thumbor:${{ steps.thumbor.outputs.VERSION }}-simd-${{ matrix.simd_level }} \
          --tag minimalcompact/thumbor:latest-simd-${{ matrix.simd_level }} \
          thumbor/
  remote_cv:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: get thumbor version
        id: thumbor
        run: |
          echo "VERSION=$(cat thumbor/requirements.txt| grep thumbor== | cut -d= -f 3)" >> $GITHUB_OUTPUT
      - name: build image
        run: |
          docker buildx build --platform=linux/amd64,linux/arm64 --build-arg THUMBOR_TAG=latest -f remotecv/Dockerfile \
          --tag  minimalcompact/remotecv:${{ steps.thumbor.outputs.VERSION }} \
          --tag minimalcompact/remotecv:latest \
          remotecv/
