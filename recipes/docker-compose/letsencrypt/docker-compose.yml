version: '3'
services:
  thumbor:
    image: ghcr.io/minimalcompact/thumbor
    environment:
      # VIRTUAL_HOST is picked up by nginx-proxy. It's set to your $HOSTNAME
      # but you can hard-code it, e.g. thumbor.example.com
      # NOTE: you must export your HOSTNAME for it to work
      - VIRTUAL_HOST=$HOSTNAME
      # also setting the let's encrypt host to $HOSTNAME
      - LETSENCRYPT_HOST=$HOSTNAME
      # THUMBOR_NUM_PROCESSES control how many processes run inside the container
      # Normally this is set in connection with the number of CPU cores
      # Note however that you can also use the docker-compose scale option to dynamically
      # scale your thumbor instances
      - THUMBOR_NUM_PROCESSES=4
      # this would allow CORS from any origin (you can restrict to specific origins if you want)
      - CORS_ALLOW_ORIGIN=*
      # returns a webp image if browser Accept headers match
      - AUTO_WEBP=True
      # nginx-proxy does caching automatically, so no need to store the result storage cache
      # (this greatly speeds up and saves on CPU)
      - RESULT_STORAGE=thumbor.result_storages.no_storage
      - RESULT_STORAGE_STORES_UNSAFE=True
      - STORAGE=thumbor.storages.file_storage
    restart: always
    networks:
      - app
  nginx-proxy:
    image: ghcr.io/minimalcompact/thumbor-nginx-proxy-cache
    environment:
      # setting the DEFAULT_HOST to the same as the VIRTUAL_HOST above.
      # Makes sure it works irrespective of the host name
      # Normally this won't be necessary, but it helps for testing.
      - DEFAULT_HOST=$HOSTNAME
    volumes:
      # this is essential for nginx-proxy to detect docker containers, scaling etc
      # see https://github.com/nginx-proxy/nginx-proxy
      - /var/run/docker.sock:/tmp/docker.sock:ro
      # mapping cache folder, to persist it independently of the container
      - ./cache:/var/cache/nginx
      # mapping for letsencrypt companion (note using the current folder)
      - ./nginx/vhost.d:/etc/nginx/vhost.d:ro
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/certs:/etc/nginx/certs:ro
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - "80:80"
      - "443:443"
    restart: always
    networks:
      - app
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - ./nginx/certs:/etc/nginx/certs:rw
      - ./nginx/html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/vhost.d/:/etc/nginx/vhost.d:rw
    depends_on:
      - nginx-proxy
volumes:
  cache:
    driver: local
networks:
  app:
    driver: bridge
